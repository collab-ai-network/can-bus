[package]
name = "node-template-runtime"
description = "A solochain runtime template built with Substrate, part of Polkadot Sdk."
version = "0.0.0"
license = "MIT-0"
authors.workspace = true
homepage.workspace = true
repository.workspace = true
edition.workspace = true
publish = false

[lints]
workspace = true

[package.metadata.docs.rs]
targets = ["x86_64-unknown-linux-gnu"]

[dependencies]
codec = { package = "parity-scale-codec", version = "3.6.1", default-features = false, features = [
	"derive",
] }
scale-info = { version = "2.10.0", default-features = false, features = [
	"derive",
	"serde",
] }

# frame
frame-support = { workspace = true, features = ["experimental"] }
frame-system = { workspace = true }
frame-try-runtime = { workspace = true, optional = true }
frame-executive = { workspace = true }

# frame pallets
pallet-aura = { workspace = true }
pallet-balances = { workspace = true }
pallet-grandpa = { workspace = true }
pallet-sudo = { workspace = true }
pallet-timestamp = { workspace = true }
pallet-transaction-payment = { workspace = true }

# primitives
sp-api = { workspace = true }
sp-block-builder = { workspace = true }
sp-consensus-aura = { workspace = true }
sp-consensus-grandpa = { workspace = true }
sp-core = { workspace = true }
sp-inherents = { workspace = true }
sp-offchain = { workspace = true }
sp-runtime = { workspace = true }
sp-session = { workspace = true }
sp-std = { workspace = true }
sp-storage = { workspace = true }
sp-transaction-pool = { workspace = true }
sp-version = { workspace = true, features = [
	"serde",
] }
sp-genesis-builder = { workspace = true }

# RPC related
frame-system-rpc-runtime-api = { workspace = true }
pallet-transaction-payment-rpc-runtime-api = { workspace = true }

# Used for runtime benchmarking
frame-benchmarking = { workspace = true, optional = true }
frame-system-benchmarking = { workspace = true, optional = true }

# The pallet in this template.
pallet-template = { path = "../pallets/template", default-features = false }

# EVM
fp-rpc = { workspace = true }
fp-self-contained = { workspace = true }
pallet-ethereum = { workspace = true }
pallet-evm = { workspace = true }
# EVM Moonbeam trace mode
moonbeam-evm-tracer = { workspace = true }
moonbeam-rpc-primitives-debug = { workspace = true }
moonbeam-rpc-primitives-txpool = { workspace = true }

[build-dependencies]
substrate-wasm-builder = { workspace = true, optional = true }

[features]
default = ["std"]
std = [
	"codec/std",
	"scale-info/std",

	"fp-rpc/std",
    "fp-self-contained/std",

	"frame-executive/std",
	"frame-support/std",
	"frame-system-benchmarking?/std",
	"frame-system-rpc-runtime-api/std",
	"frame-system/std",

	"frame-benchmarking?/std",
	"frame-try-runtime?/std",

	"pallet-aura/std",
	"pallet-balances/std",
	"pallet-grandpa/std",
	"pallet-ethereum/std",
    "pallet-evm/std",
	"pallet-sudo/std",
	"pallet-template/std",
	"pallet-timestamp/std",
	"pallet-transaction-payment-rpc-runtime-api/std",
	"pallet-transaction-payment/std",

	"sp-api/std",
	"sp-block-builder/std",
	"sp-consensus-aura/std",
	"sp-consensus-grandpa/std",
	"sp-core/std",
	"sp-genesis-builder/std",
	"sp-inherents/std",
	"sp-offchain/std",
	"sp-runtime/std",
	"sp-session/std",
	"sp-std/std",
	"sp-storage/std",
	"sp-transaction-pool/std",
	"sp-version/std",

	"moonbeam-evm-tracer/std",
    "moonbeam-rpc-primitives-debug/std",
    "moonbeam-rpc-primitives-txpool/std",

	"substrate-wasm-builder",
]

runtime-benchmarks = [
	"frame-benchmarking/runtime-benchmarks",
	"frame-support/runtime-benchmarks",
	"frame-system-benchmarking/runtime-benchmarks",
	"frame-system/runtime-benchmarks",
	"pallet-balances/runtime-benchmarks",
	"pallet-grandpa/runtime-benchmarks",
	"pallet-ethereum/runtime-benchmarks",
    "pallet-evm/runtime-benchmarks",
	"pallet-sudo/runtime-benchmarks",
	"pallet-template/runtime-benchmarks",
	"pallet-timestamp/runtime-benchmarks",
	"sp-runtime/runtime-benchmarks",
]

try-runtime = [
	"frame-executive/try-runtime",
	"frame-support/try-runtime",
	"frame-system/try-runtime",
	"frame-try-runtime/try-runtime",
	"fp-self-contained/try-runtime",
	"pallet-aura/try-runtime",
	"pallet-balances/try-runtime",
	"pallet-grandpa/try-runtime",
	"pallet-ethereum/try-runtime",
    "pallet-evm/try-runtime",
	"pallet-sudo/try-runtime",
	"pallet-template/try-runtime",
	"pallet-timestamp/try-runtime",
	"pallet-transaction-payment/try-runtime",
	"sp-runtime/try-runtime",
]

experimental = ["pallet-aura/experimental"]
